# -*- coding: utf-8 -*-


#Maryam_Jemaa_First_Web_Scraping_project.

import selenium
import pandas as pd
import time
from selenium import webdriver
from selenium.webdriver.support.ui import Select


path = "C:\Windows\webdrivers\chromedriver.exe"
driver= webdriver.Chrome(path) 
driver.get('https://imdb.com') 
#maximize window
driver.maximize_window()
#dropdown 
dropdown = driver.find_element_by_class_name("ipc-icon--arrow-drop-down") 
dropdown.click() 

time.sleep(1)

element = driver.find_element_by_link_text('Advanced Search')
element.click() 


#click on advanced title search
adv_title =driver.find_element_by_link_text('Advanced Title Search')
adv_title.click() 

#select feature film 
feature_film= driver.find_element_by_id("title_type-1")
feature_film.click()

tv_movie= driver.find_element_by_id("title_type-2") 
tv_movie.click()

min_date = driver.find_element_by_name("release_date-min") 
#here you will click and type something 
min_date = driver.find_element_by_name("release_date-min") 
min_date.click()
min_date.send_keys('1990') 


max_date = driver.find_element_by_name("release_date-max") 
max_date.click()
max_date.send_keys('2020') 


#rating 
rating_min= driver.find_element_by_name("user_rating-min")
rating_min.click()
dropdown_2 = Select(rating_min)
dropdown_2.select_by_visible_text('1.0') 

rating_max=driver.find_element_by_name("user_rating-max")
rating_max.click()
dropdown_3 = Select(rating_max)
dropdown_3.select_by_visible_text('10') 

#select genre 

genre= driver.find_element_by_id("genres-1")
genre.click() 

#choose language 

language = driver.find_element_by_name("languages")
language_dropdown = Select(language)
language_dropdown.select_by_visible_text("English")

#SearchCount 

Search = driver.find_element_by_id("search-count")
Search.click()
dropdown_4=Select(Search)
dropdown_4.select_by_index(2) 

#hit the submit button 

submit = driver.find_element_by_xpath('(//button[@type="submit"])[2]')
submit.click() 

#we want to store the url to give it the beautiful Soup to store the data 

current_url = driver.current_url 

 

#beautiful_Soup 

from bs4 import BeautifulSoup 
import requests

#get_a_request 
response = requests.get(current_url)

#status_code 
response.status_code 

#soup_object 
soup= BeautifulSoup(response.content,'html.parser') 


#Result items (starting point)
list_items = soup.find_all('div',{'class':'lister-item'})


#The Data we need to extract 
#The movie 
list_items[0].find('h3').find('a').get_text()


#The Year  

list_items[0].find('h3').find('span', {'class':'lister-item-year'}).get_text().replace('I','').replace('(','').replace(')','')

#Find duration 

list_items[0].find('span',{'class':'runtime'}).get_text() 

#Genre 
list_items[0].find('span',{'class':'genre'}).get_text().strip() 

#Rating 

list_items[0].find('div',{'class':'ratings-imdb-rating'}).get_text().strip()


#Bring_Data_Together 

movie_title =[result.find('h3').find('a').get_text() for result in list_items] 
Year =[result.find('h3').find('span', {'class':'lister-item-year'}).get_text().replace('I','').replace('(','').replace(')','') for result in list_items] 
Duration  =[result.find('span',{'class':'runtime'}).get_text() for result in list_items] 
Genre =[result.find('span',{'class':'genre'}).get_text().strip()  for result in list_items] 
Rating = [result.find('div',{'class':'ratings-imdb-rating'}).get_text().strip()  for result in list_items] 


#The data frame 

Imdb = pd.DataFrame({'Movie Title': movie_title,'Year':Year,'Duration':Duration,'Genre': Genre,'Rating':Rating})  


#Create a csv_file 
Imdb.to_excel("The imdb dataset.xlsx",index=False)
